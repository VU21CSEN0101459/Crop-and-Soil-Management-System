import random
crop_data = {
    'Loamy': {'Wheat': 3000, 'Sugarcane': 8000, 'Cotton': 2000},
    'Sandy': {'Peanuts': 4000, 'Corn': 3500, 'Carrots': 1000},
    'Clay': {'Rice': 5000, 'Soybeans': 4500, 'Cabbage': 2000}
}

soil_treatment = {
    'Loamy': 'Add organic matter to maintain fertility.',
    'Sandy': 'Use compost to improve soil structure.',
    'Clay': 'Ensure proper drainage to prevent waterlogging.'
}

disease_data = {
    'yellow leaves': 'Possible causes: Nitrogen deficiency or overwatering. Suggested solution: Apply nitrogen-rich fertilizer and monitor water levels.',
    'wilting plants': 'Possible causes: Fungal infection or root damage. Suggested solution: Check for root rot, apply fungicide, and ensure proper drainage.',
    'spots on leaves': 'Possible causes: Bacterial infection or pest attack. Suggested solution: Use appropriate pesticide and remove infected leaves.'
}

def recommend_crops(soil_type):
    if soil_type in crop_data:
        crops = crop_data[soil_type]
        print(f"\nBased on your soil type '{soil_type}', the following crops are recommended:")
        for crop, yield_estimate in crops.items():
            print(f"- {crop} (Estimated Yield: {yield_estimate} kg/hectare)")
    else:
        print("Soil type not recognized. Please enter a valid soil type.")

def provide_soil_treatment(soil_type):
    if soil_type in soil_treatment:
        print(f"\nSoil treatment recommendation for {soil_type} soil:")
        print(soil_treatment[soil_type])
    else:
        print("Soil type not recognized. Please enter a valid soil type.")

def diagnose_disease(symptoms):
    found_any = False
    print("\nDisease Diagnosis:")
    for symptom in symptoms:
        matched = False
        for disease_symptom, advice in disease_data.items():
            if disease_symptom in symptom:
                print(f"- {disease_symptom.capitalize()}: {advice}")
                matched = True
                found_any = True
        if not matched:
            print(f"- No matching disease found for symptom: {symptom}")
    if not found_any:
        print("No matching diseases found for the given symptoms.")

def main():
    print("Welcome to the Crop and Soil Management System!")
    while True:
        print("\n1. Recommend Crops")
        print("2. Provide Soil Treatment Advice")
        print("3. Diagnose Plant Diseases")
        print("4. Exit")

        choice = input("Please select an option (1-4): ")

        if choice == '1':
            soil_type = input("Enter your soil type (Loamy, Sandy, Clay): ").capitalize()
            recommend_crops(soil_type)
        elif choice == '2':
            soil_type = input("Enter your soil type (Loamy, Sandy, Clay): ").capitalize()
            provide_soil_treatment(soil_type)
        elif choice == '3':
            symptoms = input("Enter the symptoms observed (comma separated): ").lower().split(',')
            symptoms = [symptom.strip() for symptom in symptoms]
            diagnose_disease(symptoms)
        elif choice == '4':
            print("Exiting the system. Thank you!")
            break
        else:
            print("Invalid option. Please try again.")

if __name__ == "__main__":
    main()
